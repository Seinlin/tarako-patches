From a921b9cc2a31f9d9bf058cc8c66438605d6a0974 Mon Sep 17 00:00:00 2001
From: vincentliu <vliu@mozilla.com>
Date: Thu, 13 Feb 2014 17:47:17 +0800
Subject: [PATCH] Modify Bug-957509-Reduce-USS-of-Nuwa-and-preallocated-proce

---
 dom/ipc/ContentChild.cpp  |    8 ++++++++
 dom/ipc/ContentParent.cpp |   17 +++++++----------
 dom/ipc/ContentParent.h   |    5 ++---
 3 files changed, 17 insertions(+), 13 deletions(-)

diff --git a/dom/ipc/ContentChild.cpp b/dom/ipc/ContentChild.cpp
index c3a53b2..622a418 100644
--- a/dom/ipc/ContentChild.cpp
+++ b/dom/ipc/ContentChild.cpp
@@ -698,6 +698,10 @@ ContentChild::RecvPBrowserConstructor(PBrowserChild* actor,
         MOZ_ASSERT(!sFirstIdleTask);
         sFirstIdleTask = NewRunnableFunction(FirstIdle);
         MessageLoop::current()->PostIdleTask(FROM_HERE, sFirstIdleTask);
+
+        // GC is disabled in the preallocated process. Enable it when we start
+        // loading as the browser or app.
+        nsJSContext::EnableGC();
     }
 
     return true;
@@ -1598,6 +1602,10 @@ public:
 
             toplevel = toplevel->getNext();
         }
+
+        // Don't perform GC in the preallocated process to avoid touching
+        // COW pages.
+        nsJSContext::DisableGC();
         return NS_OK;
     }
 };
diff --git a/dom/ipc/ContentParent.cpp b/dom/ipc/ContentParent.cpp
index b789aa4..1bfa38a 100644
--- a/dom/ipc/ContentParent.cpp
+++ b/dom/ipc/ContentParent.cpp
@@ -1299,8 +1299,7 @@ ContentParent::ContentParent(mozIApplication* aApp,
     Open(mSubprocess->GetChannel(), mSubprocess->GetOwnedChildProcessHandle());
 
     InitInternal(aInitialPriority,
-                 true, /* Setup off-main thread compositing */
-                 true  /* Send registered chrome */);
+                 true /* aIsTemplate */);
 }
 
 #ifdef MOZ_NUWA_PROCESS
@@ -1372,8 +1371,7 @@ ContentParent::ContentParent(ContentParent* aTemplate,
     }
 
     InitInternal(priority,
-                 false, /* Setup Off-main thread compositing */
-                 false  /* Send registered chrome */);
+                 false /* aIsTemplate */);
 }
 #endif  // MOZ_NUWA_PROCESS
 
@@ -1405,8 +1403,7 @@ ContentParent::~ContentParent()
 
 void
 ContentParent::InitInternal(ProcessPriority aInitialPriority,
-                            bool aSetupOffMainThreadCompositing,
-                            bool aSendRegisteredChrome)
+    bool aIsTemplate)
 {
     // Set the subprocess's priority.  We do this early on because we're likely
     // /lowering/ the process's CPU and memory priority, which it has inherited
@@ -1416,7 +1413,7 @@ ContentParent::InitInternal(ProcessPriority aInitialPriority,
     // must come after the Open() call above.
     ProcessPriorityManager::SetProcessPriority(this, aInitialPriority);
 
-    if (aSetupOffMainThreadCompositing) {
+    if (aIsTemplate) {
         // NB: internally, this will send an IPC message to the child
         // process to get it to create the CompositorChild.  This
         // message goes through the regular IPC queue for this
@@ -1437,7 +1434,7 @@ ContentParent::InitInternal(ProcessPriority aInitialPriority,
         }
     }
 
-    if (aSendRegisteredChrome) {
+    if (aIsTemplate) {
         nsCOMPtr<nsIChromeRegistry> registrySvc = nsChromeRegistry::GetService();
         nsChromeRegistryChrome* chromeRegistry =
             static_cast<nsChromeRegistryChrome*>(registrySvc.get());
@@ -1446,7 +1443,7 @@ ContentParent::InitInternal(ProcessPriority aInitialPriority,
 
     mMessageManager = nsFrameMessageManager::NewProcessMessageManager(this);
 
-    if (gAppData) {
+    if (gAppData && aIsTemplate) {
         nsCString version(gAppData->version);
         nsCString buildID(gAppData->buildID);
         nsCString name(gAppData->name);
@@ -1457,7 +1454,7 @@ ContentParent::InitInternal(ProcessPriority aInitialPriority,
     }
 
     nsStyleSheetService *sheetService = nsStyleSheetService::GetInstance();
-    if (sheetService) {
+    if (sheetService && aIsTemplate) {
         // This looks like a lot of work, but in a normal browser session we just
         // send two loads.
 
diff --git a/dom/ipc/ContentParent.h b/dom/ipc/ContentParent.h
index 660dde1..77e79ff 100644
--- a/dom/ipc/ContentParent.h
+++ b/dom/ipc/ContentParent.h
@@ -271,10 +271,9 @@ private:
     // The common initialization for the constructors.
     void InitializeMembers();
 
-    // The common initialization logic shared by all constuctors.
+    // The common initialization logic shared by both constuctors.
     void InitInternal(ProcessPriority aPriority,
-                      bool aSetupOffMainThreadCompositing,
-                      bool aSendRegisteredChrome);
+                      bool aIsTemplate);
 
     virtual ~ContentParent();
 
-- 
1.7.9.5

