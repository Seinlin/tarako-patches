From f22ada17e6d71f20e2abdd65866b30051db9a875 Mon Sep 17 00:00:00 2001
From: Steve Chung <schung@mozilla.com>
Date: Wed, 19 Feb 2014 15:01:34 +0800
Subject: [PATCH] ringtone test

---
 apps/communications/dialer/index.html          |  1 +
 apps/communications/dialer/js/calls_handler.js | 52 -----------------------
 apps/communications/dialer/js/dialer.js        | 59 ++++++++++++++++++++++++++
 apps/communications/dialer/oncall.html         |  1 -
 4 files changed, 60 insertions(+), 53 deletions(-)

diff --git a/apps/communications/dialer/index.html b/apps/communications/dialer/index.html
index d3a5cf2..0ab3b5f 100644
--- a/apps/communications/dialer/index.html
+++ b/apps/communications/dialer/index.html
@@ -22,16 +22,17 @@
     <link rel="stylesheet" type="text/css" href="/shared/style_unstable/tabs.css">
 
     <!-- JS -->
     <script defer src="/dialer/js/utils.js"></script>
     <script defer src="/dialer/js/tone_player.js"></script>
     <script defer src="/dialer/js/keypad.js"></script>
     <script defer src="/dialer/js/dialer.js"></script>
     <script defer src="/dialer/js/call_log_db.js"></script>
+    <script defer src="/shared/js/settings_url.js"></script>
 
     <!-- for perf-measurement related utilities -->
     <script defer src='/shared/js/performance_testing_helper.js'></script>
 
     <!-- Lazy load all the things:
     <link rel="stylesheet" type="text/css" href="/shared/style/action_menu.css">
     <link rel="stylesheet" type="text/css" href="/shared/style/confirm.css">
     <link rel="stylesheet" type="text/css" href="/shared/style/edit_mode.css">
diff --git a/apps/communications/dialer/js/calls_handler.js b/apps/communications/dialer/js/calls_handler.js
index 9528426..cb8a069 100644
--- a/apps/communications/dialer/js/calls_handler.js
+++ b/apps/communications/dialer/js/calls_handler.js
@@ -14,58 +14,29 @@ var CallsHandler = (function callsHandler() {
   telephony.oncallschanged = onCallsChanged;
 
   var settings = window.navigator.mozSettings;
 
   var displayed = false;
   var closing = false;
   var ringing = false;
 
-  /* === Settings === */
-  var activePhoneSound = null;
-  SettingsListener.observe('audio.volume.notification', 7, function(value) {
-    activePhoneSound = !!value;
-    if (ringing && activePhoneSound) {
-      ringtonePlayer.play();
-    }
-  });
-
-  var phoneSoundURL = new SettingsURL();
-  SettingsListener.observe('dialer.ringtone', '', function(value) {
-    ringtonePlayer.pause();
-    ringtonePlayer.src = phoneSoundURL.set(value);
-
-    if (ringing && activePhoneSound) {
-      ringtonePlayer.play();
-    }
-  });
-
   // Setting up the SimplePhoneMatcher
   // XXX: check bug-926169
   // this is used to keep all tests passing while introducing multi-sim APIs
   var conn = window.navigator.mozMobileConnection ||
              window.navigator.mozMobileConnections &&
              window.navigator.mozMobileConnections[0];
 
   if (conn && conn.voice && conn.voice.network && conn.voice.network.mcc) {
     SimplePhoneMatcher.mcc = conn.voice.network.mcc;
   }
 
   var btHelper = new BluetoothHelper();
 
-  var ringtonePlayer = new Audio();
-  ringtonePlayer.mozAudioChannelType = 'ringer';
-  ringtonePlayer.src = phoneSoundURL.get();
-  ringtonePlayer.loop = true;
-
-  var activateVibration = null;
-  SettingsListener.observe('vibration.enabled', true, function(value) {
-    activateVibration = !!value;
-  });
-
   var screenLock;
 
   /* === Setup === */
   function setup() {
     if (telephony) {
       // Somehow the muted property appears to true after initialization.
       // Set it to false.
       telephony.muted = false;
@@ -242,44 +213,21 @@ var CallsHandler = (function callsHandler() {
       remainingCall.call.resume();
       return;
     }
 
     exitCallScreen(true);
   }
 
   function handleFirstIncoming(call) {
-    var vibrateInterval = 0;
-    if (activateVibration != false) {
-      vibrateInterval = window.setInterval(function vibrate() {
-        // Wait for the setting value to return before starting a vibration.
-        if ('vibrate' in navigator && activateVibration) {
-          navigator.vibrate([200]);
-        }
-      }, 600);
-    }
-
-    if (activePhoneSound == true) {
-      ringtonePlayer.play();
-      ringing = true;
-    } else if (activePhoneSound == null) {
-      // Let's wait for the setting to return before playing any sound.
-      ringing = true;
-    }
-
     screenLock = navigator.requestWakeLock('screen');
 
     call.addEventListener('statechange', function callStateChange() {
       call.removeEventListener('statechange', callStateChange);
 
-      ringtonePlayer.pause();
-      ringing = false;
-
-      window.clearInterval(vibrateInterval);
-
       if (screenLock) {
         screenLock.unlock();
         screenLock = null;
       }
     });
   }
 
   function handleCallWaiting(call) {
diff --git a/apps/communications/dialer/js/dialer.js b/apps/communications/dialer/js/dialer.js
index 3d91f59..f487dac 100644
--- a/apps/communications/dialer/js/dialer.js
+++ b/apps/communications/dialer/js/dialer.js
@@ -6,30 +6,57 @@ var CallHandler = (function callHandler() {
   var callScreenWindow = null;
   var callScreenWindowReady = false;
   var btCommandsToForward = [];
   var currentActivity = null;
   var FB_SYNC_ERROR_PARAM = 'isSyncError';
 
   /* === Settings === */
   var screenState = null;
+  var activePhoneSound = null;
+  var activateVibration = null;
+  var ringing = false;
+  var phoneSoundURL;
+  var ringtonePlayer = new Audio();
+  ringtonePlayer.mozAudioChannelType = 'ringer';
+  ringtonePlayer.loop = true;
 
   // Add the listener onload
   window.addEventListener('load', function getSettingsListener() {
     window.removeEventListener('load', getSettingsListener);
 
     setTimeout(function nextTick() {
       LazyLoader.load('/shared/js/settings_listener.js', function() {
+        phoneSoundURL = new SettingsURL();
+        ringtonePlayer.src = phoneSoundURL.get();
         SettingsListener.observe('lockscreen.locked', null, function(value) {
           if (value) {
             screenState = 'locked';
           } else {
             screenState = 'unlocked';
           }
         });
+        SettingsListener.observe('audio.volume.notification', 7,
+                                 function(value) {
+                                   activePhoneSound = !!value;
+                                   if (ringing && activePhoneSound) {
+                                     ringtonePlayer.play();
+                                   }
+                                 });
+        SettingsListener.observe('dialer.ringtone', '', function(value) {
+          ringtonePlayer.pause();
+          ringtonePlayer.src = phoneSoundURL.set(value);
+
+          if (ringing && activePhoneSound) {
+            ringtonePlayer.play();
+          }
+        });
+        SettingsListener.observe('vibration.enabled', true, function(value) {
+          activateVibration = !!value;
+        });
       });
     });
   });
 
   /* === WebActivity === */
   function handleActivity(activity) {
     // Workaround here until the bug 787415 is fixed
     // Gecko is sending an activity event in every multiple entry point
@@ -141,16 +168,19 @@ var CallHandler = (function callHandler() {
   }
 
   /* === ALL calls === */
   function newCall() {
     var telephony = navigator.mozTelephony;
     telephony.oncallschanged = function dialer_oncallschanged(evt) {
       if (telephony.calls.length !== 0) {
         openCallScreen();
+        if (telephony.calls.length === 1) {
+          handleFirstIncoming(telephony.calls[0]);
+        }
       }
     };
   }
 
   /* === Bluetooth Support === */
   function btCommandHandler(message) {
     var command = message['command'];
     var partialCommand = command.substring(0, 3);
@@ -367,16 +397,45 @@ var CallHandler = (function callHandler() {
 
     // Have any BT commands queued?
     btCommandsToForward.forEach(function btIterator(command) {
       sendCommandToCallScreen('BT', command);
     });
     btCommandsToForward = [];
   }
 
+  function handleFirstIncoming(call) {
+    var vibrateInterval = 0;
+    if (activateVibration != false) {
+      vibrateInterval = window.setInterval(function vibrate() {
+        // Wait for the setting value to return before starting a vibration.
+        if ('vibrate' in navigator && activateVibration) {
+          navigator.vibrate([200]);
+        }
+      }, 600);
+    }
+
+    if (activePhoneSound == true) {
+      ringtonePlayer.play();
+      ringing = true;
+    } else if (activePhoneSound == null) {
+      // Let's wait for the setting to return before playing any sound.
+      ringing = true;
+    }
+
+    call.addEventListener('statechange', function callStateChange() {
+      call.removeEventListener('statechange', callStateChange);
+
+      ringtonePlayer.pause();
+      ringing = false;
+
+      window.clearInterval(vibrateInterval);
+    });
+  }
+
   /* === MMI === */
   function init() {
     LazyLoader.load(['/shared/js/mobile_operator.js',
                      '/dialer/js/mmi.js',
                      '/dialer/js/mmi_ui.js',
                      '/shared/style/headers.css',
                      '/shared/style/input_areas.css',
                      '/shared/style_unstable/progress_activity.css',
diff --git a/apps/communications/dialer/oncall.html b/apps/communications/dialer/oncall.html
index f3c5f3e..81d23c1 100644
--- a/apps/communications/dialer/oncall.html
+++ b/apps/communications/dialer/oncall.html
@@ -18,17 +18,16 @@
     <link rel="resource" type="application/l10n" href="/dialer/locales/locales.ini">
     <link rel="resource" type="application/l10n" href="/shared/locales/date.ini">
     <!-- Making sure the shared resources will be copy into the zip
     <script type="application/javascript" src="/shared/js/l10n.js"></script>
     <script type="application/javascript" src="/shared/js/l10n_date.js"></script>
     -->
 
     <script defer type="application/javascript" src="/shared/js/settings_listener.js"></script>
-    <script defer type="application/javascript" src="/shared/js/settings_url.js"></script>
     <script defer type="application/javascript" src="/shared/js/async_storage.js"></script>
     <script defer type="application/javascript" src="/shared/js/contact_photo_helper.js"></script>
 
     <script defer type="application/javascript" src="/shared/js/simple_phone_matcher.js"></script>
     <script defer type="application/javascript" src="/dialer/js/contacts.js"></script>
     <script defer type="application/javascript" src="/dialer/js/tone_player.js"></script>
     <script defer type="application/javascript" src="/dialer/js/keypad.js"></script>
     <script defer type="application/javascript" src="/dialer/js/utils.js"></script>
-- 
1.8.5

